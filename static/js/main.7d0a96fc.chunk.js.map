{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Settings","props","react_default","a","createElement","id","className","breakLength","onClick","incrementBreakTen","incrementBreak","decrementBreak","decrementBreakTen","sessionLength","incrementSessionTen","incrementSession","decrementSession","decrementSessionTen","Timer","timeLeft","phase","Controls","startStop","buttonText","reset","App","state","running","initialState","_this","e","concat","String","Math","floor","padStart","factor","this","setState","playAudio","convertTime","document","getElementById","classList","remove","add","setBackground","_this2","interval","setInterval","clearInterval","play","audio","pause","currentTime","_this3","App_Settings","App_Timer","App_Controls","preload","src","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7d0a96fc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nconst Settings = (props) => {\n  return (\n    <div>\n\n      <div id=\"break-container\">\n        <div id=\"break-label\" className=\"text\">Break:</div>\n        <div className=\"text\">\n          <span id=\"break-length\">{props.breakLength}</span>\n          <span>{props.breakLength > 1 ? \" Minutes\" : \" Minute\"}</span>\n        </div>\n        <div className=\"buttons-container\">\n          <button id=\"break-increment-ten\" onClick={props.incrementBreakTen}>&#43;5</button>\n          <button id=\"break-increment\" onClick={props.incrementBreak}>&#43;</button>\n          <button id=\"break-decrement\" onClick={props.decrementBreak}>&#8722;</button>\n          <button id=\"break-decrement-ten\" onClick={props.decrementBreakTen}>&#8722;5</button>\n        </div>\n      </div>\n      \n      <div id=\"session-container\">\n        <div id=\"session-label\" className=\"text\">Session:</div>\n        <div className=\"text\">\n          <span id=\"session-length\">{props.sessionLength}</span>\n          <span>{props.sessionLength > 1 ? \" Minutes\" : \" Minute\"}</span>\n        </div>\n        <div className=\"buttons-container\">\n          <button id=\"session-increment-ten\" onClick={props.incrementSessionTen}>&#43;5</button>\n          <button id=\"session-increment\" onClick={props.incrementSession}>&#43;</button>\n          <button id=\"session-decrement\" onClick={props.decrementSession}>&#8722;</button>\n          <button id=\"session-decrement-ten\" onClick={props.decrementSessionTen}>&#8722;5</button>\n        </div>\n      </div>\n\n    </div>\n  )\n}\n\nconst Timer = (props) => {\n  return (\n    <div id=\"timer-container\">\n      <div className=\"text\">\n        <span id=\"time-left\">{props.timeLeft}</span>\n        <span> left in </span>\n        <span id=\"timer-label\">{props.phase}</span>\n      </div>\n    </div>\n  )\n}\n\nconst Controls = (props) => {\n  return (\n    <div id=\"controls-container\">\n      <div className=\"buttons-container\">\n        <button id=\"start_stop\" onClick={props.startStop}>{props.buttonText}</button>\n        <button id=\"reset\" onClick={props.reset}>Reset</button>\n      </div>\n    </div>\n  )\n}\n\nclass App extends Component {\n  state = {\n    breakLength: 300,\n    sessionLength: 1500,\n    timeLeft: 1500,\n    phase: \"Session\",\n    running: false,\n    startStop: \"Start\"\n  }\n\n  initialState = this.state;\n\n  convertTime(e) {\n    return `${String(Math.floor(e/60)).padStart(2, \"0\")}:${String(e%60).padStart(2, \"0\")}`;\n  }\n\n  incrementBreak(factor) {\n    let breakLength = this.state.breakLength;\n    \n    if (breakLength < 2941 + (600 - (60 * factor))) {\n      breakLength += 60 * factor;\n      \n      this.setState({\n        breakLength: breakLength,\n      })\n    }\n  }\n\n  incrementSession(factor) {\n    let sessionLength = this.state.sessionLength;\n    \n    if (sessionLength < 2941 + (600 - (60 * factor))) {\n      sessionLength += 60 * factor;\n      \n      this.setState({\n        sessionLength: sessionLength,\n        timeLeft: sessionLength\n      })\n    }\n  }\n\n  decrementBreak(factor) {\n    let breakLength = this.state.breakLength;\n    \n    if (breakLength > (60 * factor)) {\n      breakLength -= 60 * factor;\n      \n      this.setState({\n        breakLength: breakLength\n      })\n    }\n  }\n\n  decrementSession(factor) {\n    let sessionLength = this.state.sessionLength;\n    \n    if (sessionLength > (60 * factor)) {\n      sessionLength -= 60 * factor;\n      \n      this.setState({\n        sessionLength: sessionLength,\n        timeLeft: sessionLength\n      })\n    }\n  }\n\n  timeLeft() {\n    if (this.state.timeLeft === -1) {\n      this.playAudio();\n      \n      if (this.state.phase === \"Session\") {\n        this.setState({\n          timeLeft: this.state.breakLength,\n          phase: \"Break\"\n        })\n      } else if (this.state.phase === \"Break\") {\n        this.setState({\n          timeLeft: this.state.sessionLength,\n          phase: \"Session\"\n        })\n      }\n    }\n\n    return this.convertTime(this.state.timeLeft);\n  }\n\n  setBackground() {\n    if (this.state.running === false) {\n      if (this.state.phase === \"Session\") {\n        document.getElementById(\"timer-container\").classList.remove(\"timer-container-break\")\n        document.getElementById(\"timer-container\").classList.remove(\"timer-container-session\");\n        document.getElementById(\"timer-container\").classList.remove(\"timer-container-break-stop\");\n        document.getElementById(\"timer-container\").classList.add(\"timer-container-session-stop\")\n      } else if (this.state.phase === \"Break\") {\n        document.getElementById(\"timer-container\").classList.remove(\"timer-container-break\")\n        document.getElementById(\"timer-container\").classList.remove(\"timer-container-session\");\n        document.getElementById(\"timer-container\").classList.add(\"timer-container-break-stop\");\n        document.getElementById(\"timer-container\").classList.remove(\"timer-container-session-stop\")\n      }\n    } else {\n      if (this.state.phase === \"Session\") {\n        document.getElementById(\"timer-container\").classList.remove(\"timer-container-break\")\n        document.getElementById(\"timer-container\").classList.add(\"timer-container-session\");\n        document.getElementById(\"timer-container\").classList.remove(\"timer-container-break-stop\");\n        document.getElementById(\"timer-container\").classList.remove(\"timer-container-session-stop\")\n      } else if (this.state.phase === \"Break\") {\n        document.getElementById(\"timer-container\").classList.add(\"timer-container-break\")\n        document.getElementById(\"timer-container\").classList.remove(\"timer-container-session\");\n        document.getElementById(\"timer-container\").classList.remove(\"timer-container-break-stop\");\n        document.getElementById(\"timer-container\").classList.remove(\"timer-container-session-stop\")\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.setBackground();\n  }\n\n  componentDidUpdate() {\n    this.setBackground();\n  }\n\n  startStop() {\n    if (this.state.running === false) {\n      this.interval = setInterval(() => {\n        this.setState({\n          timeLeft: this.state.timeLeft - 1\n        });\n      }, 10);\n\n      this.setState({\n        running: true,\n        startStop: \"Stop\"\n      })\n    } else {\n      clearInterval(this.interval);\n      this.setState({\n        running: false,\n        startStop: \"Start\"\n      })\n    }\n  }\n\n  playAudio() {\n    const audio = document.getElementById(\"beep\");\n\n    //audio.load();\n    audio.play();\n  }\n  \n  reset() {\n    const audio = document.getElementById(\"beep\");\n    \n    clearInterval(this.interval);\n    audio.pause();\n    audio.currentTime = 0;\n    this.setState(this.initialState);\n    this.setBackground();\n  }\n\n  render() {\n    return (\n      <div id=\"App\">\n        <div id=\"background\" />\n        <div id=\"main\">\n          <Settings\n            breakLength={this.state.breakLength/60} \n            sessionLength={this.state.sessionLength/60} \n            incrementSession={() => this.incrementSession(1)}\n            incrementSessionTen={() => this.incrementSession(5)}\n            decrementSession={() => this.decrementSession(1)}\n            decrementSessionTen={() => this.decrementSession(5)}\n            incrementBreak={() => this.incrementBreak(1)}\n            incrementBreakTen={() => this.incrementBreak(5)}\n            decrementBreak={() => this.decrementBreak(1)}\n            decrementBreakTen={() => this.decrementBreak(5)} />\n          <Timer\n            timeLeft={this.timeLeft()}\n            phase={this.state.phase} />\n          <Controls\n            startStop={() => this.startStop()}\n            reset={() => this.reset()}\n            buttonText={this.state.startStop} />\n          <audio \n            id=\"beep\"\n            preload=\"auto\"\n            src=\"https://goo.gl/65cBl1\">\n          </audio>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}